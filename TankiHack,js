//gui
TPspeed = 100
/*root = document.querySelector("#root")
stateWindow = document.createElement("div")
stateWindow_style={
    display: "flex",
    backgroundColor: "black",
    height:"55%",
    width:"17%",
    position:"absolute",
    opacity: "0.55",
    left:"50%",
    right:"50%",
    transform:"translate(-50%,-50%)",
    borderRadius:"20px",
    borderBottom:"1px solid black",
    borderLeft:"1px solid black",
    borderTop:"1px solid black",
    borderRight:"1px solid black",
    borderWidth:"3px"
}
stateWindow.style.outline = "1px solid red"
//Object.assign():
Object.assign(stateWindow.style,stateWindow_style);
root.appendChild(stateWindow)

function draggable(el) {
  el.addEventListener('mousedown', function(e) {
    var offsetX = e.clientX - parseInt(window.getComputedStyle(this).left);
    var offsetY = e.clientY - parseInt(window.getComputedStyle(this).top);
    
    function mouseMoveHandler(e) {
      el.style.top = (e.clientY - offsetY) + 'px';
      el.style.left = (e.clientX - offsetX) + 'px';
    }

    function reset() {
      window.removeEventListener('mousemove', mouseMoveHandler);
      window.removeEventListener('mouseup', reset);
    }

    window.addEventListener('mousemove', mouseMoveHandler);
    window.addEventListener('mouseup', reset);
  });
}

draggable(stateWindow)


title = document.createElement("span")
title.innerText = "State"
stateWindow.appendChild(title)

title_style = {

color:"white",
textAlign:"center",
fontSize : "23px",
padding: "23px 35%",
   


    
}



Object.assign(title.style,title_style)




Sautoclick = document.createElement("span")
Sairwalk = document.createElement("span")
Srandomtp = document.createElement("span")
Sgoldtp = document.createElement("span")


label_style = {
position:"absolute",
fontSize:"18px",
padding:"23px 10%",
color:"white",
  
}

Object.assign(Sautoclick.style,label_style)
Object.assign(Sairwalk.style,label_style)
Object.assign(Srandomtp.style,label_style)
Object.assign(Sgoldtp.style,label_style)

Sautoclick.innerText = "Autoclicker:"
Sairwalk.innerText = "Airwalk:"
Srandomtp.innerText = "RandomTP:"
Sgoldtp.innerText = "GoldTP:"


Sautoclick.style.bottom = "64%"
Sairwalk.style.bottom = "50%"
Srandomtp.style.bottom = "36%"
Sgoldtp.style.bottom = "22%"

stateWindow.appendChild(Sautoclick)
stateWindow.appendChild(Sairwalk)
stateWindow.appendChild(Srandomtp)
stateWindow.appendChild(Sgoldtp)




onOff_style = {
position:"absolute",
fontSize:"18px",
padding:"23px 10%",
color:"red",
right:"0%"
  
}


State1 = document.createElement("span")
State2 = document.createElement("span")
State3 = document.createElement("span")
State4 = document.createElement("span")




Object.assign(State1.style,onOff_style)
Object.assign(State2.style,onOff_style)
Object.assign(State3.style,onOff_style)
Object.assign(State4.style,onOff_style)






State1.innerText = "OFF"
State2.innerText = "OFF"
State3.innerText = "OFF"
State4.innerText = "OFF"






stateWindow.appendChild(State1)
stateWindow.appendChild(State2)
stateWindow.appendChild(State3)
stateWindow.appendChild(State4)




State1.style.bottom = "64%"
State2.style.bottom = "50%"
State3.style.bottom = "36%"
State4.style.bottom = "22%"



tps = document.createElement("span")


plusButton = document.createElement("button")
minusButton = document.createElement("button")

tps.innerText = TPspeed

tps.style.position = "absolute"
tps.style.color = "white"
tps.style.bottom = "10%"
tps.style.right = "46%"
tps.style.fontSize = "18px"

stateWindow.appendChild(tps)


pmb_style = {
width: '35px',
height: '25px',
position: 'absolute',
borderRadius: '100px',
bottom: '10%',
}




Object.assign(plusButton.style,pmb_style)
Object.assign(minusButton.style,pmb_style)

minusButton.style.backgroundColor="red"
plusButton.style.backgroundColor="green"


minusButton.style.left = "14%"
plusButton.style.right = "14%"

stateWindow.appendChild(plusButton)
stateWindow.appendChild(minusButton)

pSign = document.createElement("span")
mSign = document.createElement("span")

pSign.innerText = "+"
mSign.innerText = "-"


plusButton.appendChild(pSign)
minusButton.appendChild(mSign)





plusButton.addEventListener("click",function(){

tps.innerText = parseInt(tps.innerText) +20

  
})
minusButton.addEventListener("click",function(){

tps.innerText =  parseInt(tps.innerText) -20

  
})
*/
//gui end





class commons{
getRoot = null
getReactRoot = null
getChatState = null 
searchObject = null
getRandom = null
}


class game{
getTankPhysics = null
getTank = null  
getWorld = null  
getMines = null
getFlags = null
getPlayers = null
getMapBoundary = null    
getBattleState = null
getSupplies = null
getHealth = null
getStriker = null
getCamera = null
getAirwalk = null
}


class hacks{
airWalk = null
clicker = null
flagTP = null
oneHitKill = null
noLaser = null
autoHeal = null
simpleTP = null
playerTP = null
rapidUpdate = null
randomTP = null
TPFlagB = null
TPFlagB = null
goldTP = null
speedhack = null


}

class vars{
FlagA = null
FlagB = null
tpName = null  
rocketCount = null
shellCache = null
  
  
}




commons.searchObject = function(object,item){
try {
for(let i=0; i<object.length;i++){
if(object[i].hasOwnProperty(item))
return object[i]

}      
} catch (error) {
    
}  
}


 function sleep(ms){
    return new Promise(resolve => setTimeout(resolve, ms));
}



commons.getRoot = function(){
root = document.querySelector("#root")  
return root
}

commons.getReactRoot = function(){
return root._reactRootContainer._internalRoot.current.memoizedState.element.type.prototype.store.subscribers.array_hd7ov6$_0  
  
}



commons.getRandom = function(min,max){
return Math.floor(Math.random() * (max - min + 1) + min)
  
  
}

//keypressing


class KeyPressing{static k=[];static i(){document.addEventListener('keydown',(e)=>{const c=e.keyCode;if(KeyPressing.k.includes(c)==!1){KeyPressing.k.push(c)}}); document.addEventListener('keyup',(e)=>{const c=e.keyCode;if(KeyPressing.k.includes(c)==!0){const a=KeyPressing.k.indexOf(c);if(a!==-1){KeyPressing.k.splice(a,1)}}})} static isKeyPressed(c){return KeyPressing.k.includes(c)}}KeyPressing.i()




//GAME ITEMS



game.getTank = function(){
return commons.searchObject(commons.getReactRoot(),"tank").tank

  
  
  
}

game.getWorld = function(){
return game.getTank().world  
  
}

game.getMines = function(){
return game.getWorld().entities_0.array_hd7ov6$_0.at(0).components_0.array.at(15);  
  
  
  
}

game.getMapBoundary = function(){
return game.getWorld().entities_0.array_hd7ov6$_0.at(0).components_0.array.at(0).bounds
}


game.getPlayers = function(){
return game.getTank().components_0.array[33].gameMode_0.tanksOnField
  
}
game.getBattleState = function(){
  
return commons.getReactRoot().at(1).state.inBattle
}

commons.getChatState = function(){
return document.querySelector(".sc-bwzfXH.iokmvL")
}


game.getStriker = function(){
return commons.searchObject(game.getTank().components_0.array,"strikerWeapon_jjsiik$_0").strikerWeapon_jjsiik$_0
  
  
  
  
}


game.getHealth = function(){
return game.getTank().components_0.array[1].isFullHealth()
  
  
}

game.getTankPhysics = function(){
return game.getTank().components_0.array[5].tankPhysicsComponent_tczrao$_0
  
  
  
}

game.getCamera = function(){
for (let i = 0; i < game.getTank().components_0.array.length; i++)
  {
    if(game.getTank().components_0.array[i].hasOwnProperty("followCamera_w8ai3w$_0"))
    return game.getTank().components_0.array[i].followCamera_0.currState_0
    
  }
}


game.getFlags = function(){
try {
if(game.getWorld().triggers_0.triggers_0.array[0].flagBaseTriggerListener_0.flags_0.internalMap_uxhen5$_0.backingMap_0[1]._value_0.teamType.name == "TEAM_A"){
vars.FlagA = game.getWorld().triggers_0.triggers_0.array[0].flagBaseTriggerListener_0.flags_0.internalMap_uxhen5$_0.backingMap_0[1]._value_0.getPosition()

vars.FlagB = game.getWorld().triggers_0.triggers_0.array[0].flagBaseTriggerListener_0.flags_0.internalMap_uxhen5$_0.backingMap_0[0]._value_0.getPosition()

    
}    
} catch (error) {
    
}}





game.getAirwalk = function(){
return commons.searchObject(game.getTank().components_0.array,"trackedChassis_eytv59$_0").trackedChassis_eytv59$_0  
  
}



game.getSupplies = function(supply){
try {
for(key in game.getTank().components_0.array[27].supplyTypeConfigs_0.entries.$outer.map_97q5dv$_0.internalMap_uxhen5$_0.backingMap_0){
if(game.getTank().components_0.array[27].supplyTypeConfigs_0.entries.$outer.map_97q5dv$_0.internalMap_uxhen5$_0.backingMap_0[key].key_5xhq3d$_0.name$ == supply){
return key 
}


}    
} catch (error) {
    
}  
  

}

function getSupplyArrays(){
try {
window.mines = game.getSupplies("MINE")  
window.repairs = game.getSupplies("FIRST_AID")
window.DA = game.getSupplies("DOUBLE_ARMOR")
window.DD = game.getSupplies("DOUBLE_DAMAGE")
window.NITRO = game.getSupplies("NITRO")  
    
} catch (error) {
    
}
}

supps = setInterval(getSupplyArrays,500)




//HACKS

hacks.speedhack = function(){
try{
game.getTank().components_0.array[14].chassisLocker_kjqurp$_0.chassis_x8422y$_0.maxSpeedSmoother_fqgjkx$_0.currentValue_58o4vw$_0 = 15000
game.getTank().components_0.array[14].chassisLocker_kjqurp$_0.chassis_x8422y$_0.maxSpeedSmoother_fqgjkx$_0.targetValue_mmhheo$_0 = 15000
game.getAirwalk().speedCharacteristics_0.acceleration = 8000
 
}catch (error) {
 return Error
}

}






hacks.simpleTP = function()

 {


 
 
 
 if (KeyPressing.isKeyPressed(87 /*key: W*/) && commons.getChatState()==null)
    {
       

        
            
            game.getTankPhysics().body.state.position.x += TPspeed * Math.sin(-game.getCamera().direction);
            game.getTankPhysics().body.state.position.y += TPspeed * Math.cos(-game.getCamera().direction);
        
    }

    if (KeyPressing.isKeyPressed(83 /*key: S*/) && commons.getChatState()==null)
    {
        
        game.getTankPhysics().body.state.position.x -= TPspeed * Math.sin(-game.getCamera().direction);
            game.getTankPhysics().body.state.position.y -= TPspeed * Math.cos(-game.getCamera().direction);
    }

    if (KeyPressing.isKeyPressed(65 /*key: A*/) && commons.getChatState()==null)
    {
        

       
           

            game.getTankPhysics().body.state.position.x -= TPspeed * Math.sin(-(game.getCamera().direction - Math.PI / 2));
            game.getTankPhysics().body.state.position.y -= TPspeed * Math.cos(-(game.getCamera().direction - Math.PI / 2));
        
    }

    if (KeyPressing.isKeyPressed(68 /*key: D*/) && commons.getChatState()==null)
    {
        

       
            game.getTankPhysics().body.state.position.x +=TPspeed * Math.sin(-(game.getCamera().direction - Math.PI / 2));
            game.getTankPhysics().body.state.position.y += TPspeed * Math.cos(-(game.getCamera().direction - Math.PI / 2));
        
    }
   
   if (KeyPressing.isKeyPressed(74 /*key: J*/) && commons.getChatState()==null)
    {
        

       
            game.getTankPhysics().body.state.position.z+=80
        
    }

   
   if (KeyPressing.isKeyPressed(70 /*key: F*/) && commons.getChatState()==null)
    {
        

       
            game.getTankPhysics().body.state.position.z-=80
        
    }
   
   
   
   
   

}


function getTarget(){
try {
enemyID = game.getStriker().playerIdQuery_0.playerId 
target = game.getStriker().getPreferredTarget_0(enemyID).components_0.array[5].tankPhysicsComponent_tczrao$_0.body_xsop3k$_0.state.position
 
} catch (error) {
 
}
}

 
let gtr = setInterval(getTarget,100)



hacks.clicker = function(){ 
try {
game.getTank().components_0.array[27].supplyTypeConfigs_0.entries.$outer.map_97q5dv$_0.internalMap_uxhen5$_0.backingMap_0[mines]._value_0._value_0.onUserActivatedSupply() 
game.getTank().components_0.array[27].supplyTypeConfigs_0.entries.$outer.map_97q5dv$_0.internalMap_uxhen5$_0.backingMap_0[repairs]._value_0._value_0.onUserActivatedSupply() 
game.getTank().components_0.array[27].supplyTypeConfigs_0.entries.$outer.map_97q5dv$_0.internalMap_uxhen5$_0.backingMap_0[DD]._value_0._value_0.onUserActivatedSupply() 
game.getTank().components_0.array[27].supplyTypeConfigs_0.entries.$outer.map_97q5dv$_0.internalMap_uxhen5$_0.backingMap_0[DA]._value_0._value_0.onUserActivatedSupply() 
game.getTank().components_0.array[27].supplyTypeConfigs_0.entries.$outer.map_97q5dv$_0.internalMap_uxhen5$_0.backingMap_0[NITRO]._value_0._value_0.onUserActivatedSupply() 

    
} catch (error) {
    
} 


}



hacks.autoHeal = function(){
try {
if(game.getHealth()==false){
game.getTank().components_0.array[27].supplyTypeConfigs_0.entries.$outer.map_97q5dv$_0.internalMap_uxhen5$_0.backingMap_0[mines]._value_0._value_0.onUserActivatedSupply() 
game.getTank().components_0.array[27].supplyTypeConfigs_0.entries.$outer.map_97q5dv$_0.internalMap_uxhen5$_0.backingMap_0[repairs]._value_0._value_0.onUserActivatedSupply() 

  
}  
      
} catch (error) {
    
}

  
}



autoR = setInterval(hacks.autoHeal,1)


hacks.rapidUpdate = function(){
                      
try {
   game.getTank().components_0.array[37].needImmediateUpdate_0  = true  
} catch (error) {
     
 }}
let ru = setInterval(hacks.rapidUpdate,10)


hacks.TPFlagA = function(){
if(commons.getChatState()==null){
game.getTankPhysics().body_xsop3k$_0.state.position.x = vars.FlagA.x
game.getTankPhysics().body_xsop3k$_0.state.position.y = vars.FlagA.y
game.getTankPhysics().body_xsop3k$_0.state.position.z = vars.FlagA.z
}
}


hacks.TPFlagB = function(){
if(commons.getChatState()==null){  
game.getTankPhysics().body_xsop3k$_0.state.position.x = vars.FlagB.x
game.getTankPhysics().body_xsop3k$_0.state.position.y = vars.FlagB.y
game.getTankPhysics().body_xsop3k$_0.state.position.z = vars.FlagB.z
}
}

function getNames(){
try {
Table = document.getElementsByTagName("table")
cName = Table[0].children[1].children[1].children[0].className
tElems = document.getElementsByClassName(cName)  
for(let i=0;i<tElems.length;i++){
tElems[i].addEventListener("click",function(){
splitArray = (tElems[i].innerText).split("]") 
if(splitArray.length == 1){
tpName = (tElems[i].innerText).trim()
}
if(splitArray.length == 2){
tpName = (splitArray[1]).trim()
}  
  
  
  
  
})  
}
} catch (error) {
    
}
}




let gn = setInterval(getNames,100)






function tpByName(){
try {
for (key in commons.searchObject(commons.getReactRoot(),"tank").store_0.state.battleUsers.uids.map_97q5dv$_0.internalMap_uxhen5$_0.backingMap_0){
if (commons.searchObject(commons.getReactRoot(),"tank").store_0.state.battleUsers.uids.map_97q5dv$_0.internalMap_uxhen5$_0.backingMap_0[key]._value_0._value_0 == tpName){
tpUserID = commons.searchObject(commons.getReactRoot(),"tank").store_0.state.battleUsers.uids.map_97q5dv$_0.internalMap_uxhen5$_0.backingMap_0[key].key_5xhq3d$_0
}


}
    
} catch (error) {
    
}  




}

setInterval(tpByName,300)


hacks.playerTP = function(){
if(commons.getChatState()==null){ 
try {
game.getTank().components_0.array[5].tankPhysicsComponent_tczrao$_0.body_xsop3k$_0.state.position.x = game.getPlayers().getTank_s8cxhz$(tpUserID).components_0.array[5].tankPhysicsComponent_tczrao$_0.body_xsop3k$_0.state.position.x
game.getTank().components_0.array[5].tankPhysicsComponent_tczrao$_0.body_xsop3k$_0.state.position.y = game.getPlayers().getTank_s8cxhz$(tpUserID).components_0.array[5].tankPhysicsComponent_tczrao$_0.body_xsop3k$_0.state.position.y
game.getTank().components_0.array[5].tankPhysicsComponent_tczrao$_0.body_xsop3k$_0.state.position.z = game.getPlayers().getTank_s8cxhz$(tpUserID).components_0.array[5].tankPhysicsComponent_tczrao$_0.body_xsop3k$_0.state.position.z+120
    
} catch (error) {
    
}
}
}


hacks.randomTP = function(){
try {
game.getTank().components_0.array[5].tankPhysicsComponent_0.interpolatedPosition.x = commons.getRandom(game.getMapBoundary().minX,game.getMapBoundary().maxX)
game.getTank().components_0.array[5].tankPhysicsComponent_0.interpolatedPosition.y = commons.getRandom(game.getMapBoundary().minY,game.getMapBoundary().maxY)
} catch (error) {
  
}  
  
}


 
hacks.airWalk = function(){
game.getAirwalk().params_nd1j3b$_0.maxRayLength = 11111111  
game.getAirwalk().params_nd1j3b$_0.dampingCoeff = 0
game.getAirwalk().params_nd1j3b$_0.springCoeff= 0
  
  
}


function unAim(){

game.getStriker().lockTarget_gcez93$ = function(){return !1-!0}
    
}

function Aim(){

game.getStriker().lockTarget_gcez93$ =function(t,e,n){return void 0===e&&(e=null),n?n(t,e):this.lockTarget_gcez93$$default(t,e)}
    
}






function ap(){try {
for (let i = 0; i < vars.shellCache.length; i++)
                            {
vars.shellCache.at(i).components_0.array.at(1).maxSpeed_0 = 0;
                                vars.shellCache.at(i).components_0.array.at(1).minSpeed_0 = 0;
                                vars.shellCache.at(i).components_0.array.at(1).direction.x = 0;
                                vars.shellCache.at(i).components_0.array.at(1).direction.y = 0;
                                vars.shellCache.at(i).components_0.array.at(1).direction.z = 0;                          
                                

                            }    
} catch (error) {
    
}}


function apm(){for (let i = 0; i < vars.shellCache.length; i++)
                            {
                                //vars.shellCache.at(i).components_0.array.at(1).maxSpeed_0 = 35000;
                                //vars.shellCache.at(i).components_0.array.at(1).minSpeed_0 = 2000;
                                vars.shellCache.at(i).components_0.array.at(1).position.x = target.x
                                vars.shellCache.at(i).components_0.array.at(1).position.y = target.y
                                vars.shellCache.at(i).components_0.array.at(1).position.z = target.z


                            }}
rocketCount = 0
let apr = setInterval(ap,10)
hacks.oneHitKill = function(){
try {
vars.shellCache = commons.searchObject(game.getTank().components_0.array,"shellCache_0").shellCache_0.itemsInUse_123ot1$_0.array_hd7ov6$_0


game.getStriker().sendRealShotMessage_0 = async function(){
this.realShotMessage_0.barrelIndex=this.currentBarrel_0,this.entity.send_il80ix$(this.realShotMessage_0)  
Aim()
rocketCount++
await sleep(200)
if(rocketCount==8){
  
await sleep(900)
rocketCount = 0
apm()
}
  
  
  
  
}  

  
  
  
  
} catch (error) {
    
}  
  
  
  
  
  
  
  
}


let ohkr = setInterval(hacks.oneHitKill,100)






hacks.goldTP = function(){
if(commons.getChatState()==null){
for(let i =0;i<game.getWorld().triggers_0.triggers_0.array.length;i++){try {
if(game.getWorld().triggers_0.triggers_0.array[i].bonus_0.bonusData_cqilaj$_0.bonusLight.lightColor.color==16777215){    
game.getTank().components_0.array[5].tankPhysicsComponent_tczrao$_0.body_xsop3k$_0.state.position.x = game.getWorld().triggers_0.triggers_0.array[i].collisionBox_0.aabb.minX
game.getTank().components_0.array[5].tankPhysicsComponent_tczrao$_0.body_xsop3k$_0.state.position.y = game.getWorld().triggers_0.triggers_0.array[i].collisionBox_0.aabb.minY
game.getTank().components_0.array[5].tankPhysicsComponent_tczrao$_0.body_xsop3k$_0.state.position.z = game.getWorld().triggers_0.triggers_0.array[i].collisionBox_0.aabb.minZ+150
}     
} catch (error) {
    
}}


}

}


function noZVelocity(){


try {
game.getTankPhysics().body_xsop3k$_0.state.velocity.z = 0
game.getWorld().physicsScene_0.gravity.z  = 0

} catch (error) {
    
}
    
}

function nt(){game.getTankPhysics().body.state.orientation.x = 0;
    game.getTankPhysics().body.state.orientation.y = 0;

    game.getTankPhysics().body.state.angularVelocity.x = 0;
    game.getTankPhysics().body.state.angularVelocity.y = 0;
    game.getTankPhysics().body.state.angularVelocity.z = 0;}




function removeAllMines(){
try {
 for(player in game.getPlayers().list_0.array
){

mineOwnerID = game.getPlayers().list_0.array[player]
.components_0.array[4].userId 
game.getMines().removeAllMines_0(mineOwnerID)


    
}
} catch (error) {
 
}


    
}

let ram = setInterval(removeAllMines,1000)




















//event listeners



WpressCount = 0
document.addEventListener('keydown', function (event) { if (event.key === 'F10'){
WpressCount ++
if(WpressCount%2==1){
root.appendChild(hackWindow)

   
}

if(WpressCount%2==0){

root.removeChild(hackWindow)
   
}


}})

  

root = document.querySelector("#root")
hackWindow = document.createElement("div")
hackWindow_style={
    display: "flex",
    backgroundColor: "rgb(12 12 12 / 28%)",
    height:"500px",
    width:"250px",
    position:"absolute",
    opacity: "0.55",
    left:"50%",
    right:"50%",
    transform:"translate(-50%,-50%)",
    borderRadius:"20px",
    borderBottom:"1px solid black",
    borderLeft:"1px solid black",
    borderTop:"1px solid black",
    borderRight:"1px solid black",
    borderWidth:"3px"
}
hackWindow.style.outline = "1px solid red"
//Object.assign():
Object.assign(hackWindow.style,hackWindow_style);
root.appendChild(hackWindow)

function draggable(el) {
  el.addEventListener('mousedown', function(e) {
    var offsetX = e.clientX - parseInt(window.getComputedStyle(this).left);
    var offsetY = e.clientY - parseInt(window.getComputedStyle(this).top);
    
    function mouseMoveHandler(e) {
      el.style.top = (e.clientY - offsetY) + 'px';
      el.style.left = (e.clientX - offsetX) + 'px';
    }

    function reset() {
      window.removeEventListener('mousemove', mouseMoveHandler);
      window.removeEventListener('mouseup', reset);
    }

    window.addEventListener('mousemove', mouseMoveHandler);
    window.addEventListener('mouseup', reset);
  });
}

draggable(hackWindow)


title = document.createElement("span")
title.innerText = "HACKS"
hackWindow.appendChild(title)

title_style = {

color:"white",
textAlign:"center",
fontSize : "23px",
padding: "23px 30%",
   


    
}



Object.assign(title.style,title_style)


notiltButton = document.createElement("div")
autoclickerButton = document.createElement("div")
autoHealButton = document.createElement("div")
PlayerTPButton = document.createElement("div")
SpeedhackButton = document.createElement("div")
SimpleTPButton = document.createElement("div")
FlagTPButton = document.createElement("div")
AirwalkButton = document.createElement("div")
GoldTPButton = document.createElement("div")



checkboxUnticked_style = {
position:"absolute",
width:"0.1px",
height:"0.1px",
backgroundColor:"#8080803b",
outline:"none",
borderRadius:"12px",
boxShadow:"inset 0 0 5px tgba(0,0,0,.2)",
transition:".5s",
padding:"6px 8%", 


    
}



checkboxTicked_style = {
backgroundColor:"#97cdea",





    
}




function applyButtons(b1,b2,b3,b4,b5,b6,b7){

Object.assign(b1.style,checkboxUnticked_style)
Object.assign(b2.style,checkboxUnticked_style)
Object.assign(b3.style,checkboxUnticked_style)
Object.assign(b4.style,checkboxUnticked_style)
Object.assign(b5.style,checkboxUnticked_style)
Object.assign(b6.style,checkboxUnticked_style)
Object.assign(b7.style,checkboxUnticked_style)

    
b1.style.marginLeft = "70%"
b2.style.marginLeft = "70%"
b3.style.marginLeft = "70%"
b4.style.marginLeft = "70%"
b5.style.marginLeft = "70%"
b6.style.marginLeft = "70%"
b7.style.marginLeft = "70%"


b1.style.bottom = "80%"                                                
b2.style.bottom = "71.9%"
b3.style.bottom = "64%"
b4.style.bottom = "56%"
b5.style.bottom = "47.8%"
b6.style.bottom = "40%"
b7.style.bottom = "32%"







}



function applyLabels(l1,l2,l3,l4,l5,l6,l7){

l1.style.fontSize = "15px"
l2.style.fontSize = "15px"
l3.style.fontSize = "15px"
l4.style.fontSize = "15px"
l5.style.fontSize = "15px"
l6.style.fontSize = "15px"
l7.style.fontSize = "15px"

l1.style.position = "absolute"
l2.style.position = "absolute"
l3.style.position = "absolute"
l4.style.position = "absolute"
l5.style.position = "absolute"
l6.style.position = "absolute"
l7.style.position = "absolute"


l1.style.bottom = "80%"
l1.style.padding = "35% 0px 0px 25px"
l2.style.padding = "50% 0px 0px 25px"
l3.style.padding = "65.8% 0px 0px 25px"
l4.style.padding = "65.8% 0px 0px 25px"
l4.style.bottom = "55%"    
l5.style.bottom = "47%"
l5.style.padding = "65.8% 0px 0px 25px"
l6.style.bottom = "39%"
l6.style.padding = "65.8% 0px 0px 25px"
l7.style.padding = "65.8% 0px 0px 25px"
l7.style.bottom = "31%"

    
}


applyButtons(notiltButton,autoclickerButton,autoHealButton,PlayerTPButton,SpeedhackButton,SimpleTPButton,FlagTPButton)


//page1

Notilt = document.createElement("span")
Autoclicker= document.createElement("span")
Autoheal= document.createElement("span")
PlayerTP= document.createElement("span")
GoldTP= document.createElement("span")
FlagTP= document.createElement("span")
Airwalk= document.createElement("span")
SimpleTP= document.createElement("span")
Speedhack= document.createElement("span")

Notilt.innerText = "Notilt:"
Autoclicker.innerText = "Autoclicker:"
Autoheal.innerText = "Autoheal:"
PlayerTP.innerText = "PlayerTP:"
SimpleTP.innerText = "SimpleTP:"
GoldTP.innerText = "GoldTP:"
FlagTP.innerText = "FlagTP:"
Airwalk.innerText = "Airwalk:"
Speedhack.innerText = "Speedhack:"




applyLabels(Notilt,Autoclicker,Autoheal,PlayerTP,Speedhack,SimpleTP,FlagTP)

















hackWindow.appendChild(notiltButton)
hackWindow.appendChild(autoclickerButton)
hackWindow.appendChild(autoHealButton)
hackWindow.appendChild(PlayerTPButton)
hackWindow.appendChild(SpeedhackButton)
hackWindow.appendChild(SimpleTPButton)
hackWindow.appendChild(FlagTPButton)


hackWindow.appendChild(Notilt)
hackWindow.appendChild(Autoclicker)
hackWindow.appendChild(Autoheal)
hackWindow.appendChild(PlayerTP)
hackWindow.appendChild(Speedhack)
hackWindow.appendChild(SimpleTP)
hackWindow.appendChild(PlayerTP)
hackWindow.appendChild(FlagTP)




innerCircle1  = document.createElement("div")
innerCircle2  = document.createElement("div")
innerCircle3  = document.createElement("div")
innerCircle4  = document.createElement("div")
innerCircle5  = document.createElement("div")
innerCircle6  = document.createElement("div")
innerCircle7  = document.createElement("div")

innerCircle_style = {
width:"30%",
height:"100%",
backgroundColor:"white",
position:"absolute",
borderRadius:"10px",
top: "2%",
right: "63%",
transition:"right 0.7s"
    
}

Object.assign(innerCircle1.style,innerCircle_style)
Object.assign(innerCircle2.style,innerCircle_style)
Object.assign(innerCircle3.style,innerCircle_style)
Object.assign(innerCircle4.style,innerCircle_style)
Object.assign(innerCircle5.style,innerCircle_style)
Object.assign(innerCircle6.style,innerCircle_style)
Object.assign(innerCircle7.style,innerCircle_style)


notiltButton.appendChild(innerCircle1)
autoclickerButton.appendChild(innerCircle2)
autoHealButton.appendChild(innerCircle3)
PlayerTPButton.appendChild(innerCircle4)
SpeedhackButton.appendChild(innerCircle5)
SimpleTPButton.appendChild(innerCircle6)
FlagTPButton.appendChild(innerCircle7)






page1 = document.createElement("div")
page2 = document.createElement("div")
page3 = document.createElement("div")
page4 = document.createElement("div")


page_style = {
position:'absolute',
width:"6%",
height:"3%",
borderRadius : "20px",
backgroundColor:"black",
bottom:"11%",



    
}

Object.assign(page1.style,page_style)
Object.assign(page2.style,page_style)
Object.assign(page3.style,page_style)
Object.assign(page4.style,page_style)


hackWindow.appendChild(page1)
hackWindow.appendChild(page2)
hackWindow.appendChild(page3)
hackWindow.appendChild(page4)




page1.style.marginLeft = "20%"
page2.style.marginLeft = "38%"
page3.style.marginLeft = "57%"
page4.style.marginLeft = "76%"

//page1 end


//page2
















//page2 end





//click count vars
ncc =0
acc=0
ahc=0
ptc = 0
shc = 0
smc = 0
ftc = 0

//end vars


//js for buttons
notiltButton.addEventListener("click",function(){
ncc +=1


if(ncc%2==1){
notiltButton.style.backgroundColor="rgb(109 24 137)"
notiltButton.children[0].style.right = "10%"
notiltButton.children[0].style.backgroundColor = "black"

window.NZR = setInterval(noZVelocity,1)
window.ntr = setInterval(nt,1)
window.rgt = game.getWorld().physicsScene_0.gravity.z 

  

}

if(ncc%2==0){
notiltButton.style.backgroundColor="#8080803b"
notiltButton.children[0].style.right = "63%"
notiltButton.children[0].style.backgroundColor = "white" 
clearInterval(window.NZR)
clearInterval(window.ntr)
game.getWorld().physicsScene_0.gravity.z = window.rgt
game.getTankPhysics().body_xsop3k$_0.state.velocity.z = -1.3

}


    
})


autoclickerButton.addEventListener("click",function(){
acc +=1


if(acc%2==1){
autoclickerButton.style.backgroundColor="rgb(109 24 137)"
autoclickerButton.children[0].style.right = "10%"
autoclickerButton.children[0].style.backgroundColor = "black"   
window.p = setInterval(hacks.clicker,30)
}

if(acc%2==0){
autoclickerButton.style.backgroundColor="#8080803b"
autoclickerButton.children[0].style.right = "63%"
autoclickerButton.children[0].style.backgroundColor = "white"   
clearInterval(window.p)
}


    
})


autoHealButton.addEventListener("click",function(){
ahc +=1


if(ahc%2==1){
autoHealButton.style.backgroundColor="rgb(109 24 137)"
autoHealButton.children[0].style.right = "10%"
autoHealButton.children[0].style.backgroundColor = "black"   
window.autoR = setInterval(hacks.autoHeal,1)
}

if(ahc%2==0){
autoHealButton.style.backgroundColor="#8080803b"
autoHealButton.children[0].style.right = "63%"
autoHealButton.children[0].style.backgroundColor = "white"   
clearInterval(window.autoR)


}


    
})



PlayerTPButton.addEventListener("click",function(){
ptc +=1


if(ptc%2==1){
PlayerTPButton.style.backgroundColor="rgb(109 24 137)"
PlayerTPButton.children[0].style.right = "10%"
PlayerTPButton.children[0].style.backgroundColor = "black"   
document.addEventListener('keydown',  window.tpS = function (event) { if (event.key === 'v'){hacks.playerTP()
root.style.backgroundColor = "black"

}})

}

if(ptc%2==0){
PlayerTPButton.style.backgroundColor="#8080803b"
PlayerTPButton.children[0].style.right = "63%"
PlayerTPButton.children[0].style.backgroundColor = "white"   
document.removeEventListener("keydown",window.tpS)

}

    
})


SpeedhackButton.addEventListener("click",function(){
shc +=1


if(shc%2==1){
SpeedhackButton.style.backgroundColor="rgb(109 24 137)"
SpeedhackButton.children[0].style.right = "10%"
SpeedhackButton.children[0].style.backgroundColor = "black"   
window.speed = setInterval(hacks.speedhack,500)
}

if(shc%2==0){
SpeedhackButton.style.backgroundColor="#8080803b"
SpeedhackButton.children[0].style.right = "63%"
SpeedhackButton.children[0].style.backgroundColor = "white"   
clearInterval(window.speed)
}


    
})




SimpleTPButton.addEventListener("click",function(){
smc +=1


if(smc%2==1){
SimpleTPButton.style.backgroundColor="rgb(109 24 137)"
SimpleTPButton.children[0].style.right = "10%"
SimpleTPButton.children[0].style.backgroundColor = "black"   
window.ckp = setInterval(hacks.simpleTP)
}

if(smc%2==0){
SimpleTPButton.style.backgroundColor="#8080803b"
SimpleTPButton.children[0].style.right = "63%"
SimpleTPButton.children[0].style.backgroundColor = "white"   
clearInterval(window.ckp)
}


    
})


FlagTPButton.addEventListener("click",function(){
ftc +=1


if(ftc%2==1){
FlagTPButton.style.backgroundColor="rgb(109 24 137)"
FlagTPButton.children[0].style.right = "10%"
FlagTPButton.children[0].style.backgroundColor = "black"   



  
}

if(ftc%2==0){
FlagTPButton.style.backgroundColor="#8080803b"
FlagTPButton.children[0].style.right = "63%"
FlagTPButton.children[0].style.backgroundColor = "white"   
}


    
})


root.removeChild(hackWindow)


//rgba(114, 56, 56, 0.08);
  
  
  
  
  
  
  
  
  
 
 
document.addEventListener('keydown',   function (event) { if (event.key === 'r'){unAim()}})




