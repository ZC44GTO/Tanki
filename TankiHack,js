class commons{
getRoot = null
getReactRoot = null
getChatState = null 
searchObject = null
getRandom = null
}


class game{
getTankPhysics = null
getTank = null  
getWorld = null  
getMines = null
getFlags = null
getPlayers = null
getMapBoundary = null    
getBattleState = null
getSupplies = null
getHealth = null
getStriker = null
getCamera = null
getAirwalk = null
}


class hacks{
airWalk = null
clicker = null
flagTP = null
oneHitKill = null
noLaser = null
autoHeal = null
simpleTP = null
playerTP = null
rapidUpdate = null
randomTP = null
TPFlagB = null
TPFlagB = null
goldTP = null
speedhack = null


}

class vars{
FlagA = null
FlagB = null
target = null
tpName = null  
rocketCount = null
shellCache = null
  
  
}




commons.searchObject = function(object,item){
try {
for(let i=0; i<object.length;i++){
if(object[i].hasOwnProperty(item))
return object[i]

}      
} catch (error) {
    
}  
}


 function sleep(ms){
    return new Promise(resolve => setTimeout(resolve, ms));
}



commons.getRoot = function(){
root = document.querySelector("#root")  
return root
}

commons.getReactRoot = function(){
return root._reactRootContainer._internalRoot.current.memoizedState.element.type.prototype.store.subscribers.array_hd7ov6$_0  
  
}



commons.getRandom = function(min,max){
return Math.floor(Math.random() * (max - min + 1) + min)
  
  
}






//GAME ITEMS



game.getTank = function(){
return commons.searchObject(commons.getReactRoot(),"tank").tank

  
  
  
}

game.getWorld = function(){
return game.getTank().world  
  
}

game.getMines = function(){
return game.getWorld().entities_0.array_hd7ov6$_0.at(0).components_0.array.at(15);  
  
  
  
}

game.getMapBoundary = function(){
return game.getWorld().entities_0.array_hd7ov6$_0.at(0).components_0.array.at(0).bounds
}


game.getPlayers = function(){
return game.getTank().components_0.array[33].gameMode_0.tanksOnField
  
}
game.getBattleState = function(){
  
return commons.getReactRoot().at(1).state.inBattle
}

commons.getChatState = function(){
return document.querySelector(".sc-bwzfXH.iokmvL")
}


game.getStriker = function(){
return commons.searchObject(game.getTank().components_0.array,"strikerWeapon_jjsiik$_0").strikerWeapon_jjsiik$_0
  
  
  
  
}


game.getHealth = function(){
return game.getTank().components_0.array[1].isFullHealth()
  
  
}

game.getTankPhysics = function(){
return game.getTank().components_0.array[5].tankPhysicsComponent_tczrao$_0
  
  
  
}

game.getCamera = function(){
for (let i = 0; i < game.getTank().components_0.array.length; i++)
  {
    if(game.getTank().components_0.array[i].hasOwnProperty("followCamera_w8ai3w$_0"))
    return game.getTank().components_0.array[i].followCamera_0.currState_0
    
  }
}


game.getFlags = function(){
try {
if(game.getWorld().triggers_0.triggers_0.array[0].flagBaseTriggerListener_0.flags_0.internalMap_uxhen5$_0.backingMap_0[1]._value_0.teamType.name == "TEAM_A"){
vars.FlagA = game.getWorld().triggers_0.triggers_0.array[0].flagBaseTriggerListener_0.flags_0.internalMap_uxhen5$_0.backingMap_0[1]._value_0.getPosition()

vars.FlagB = game.getWorld().triggers_0.triggers_0.array[0].flagBaseTriggerListener_0.flags_0.internalMap_uxhen5$_0.backingMap_0[0]._value_0.getPosition()

    
}    
} catch (error) {
    
}}





game.getAirwalk = function(){
return commons.searchObject(game.getTank().components_0.array,"trackedChassis_eytv59$_0").trackedChassis_eytv59$_0  
  
}



game.getSupplies = function(supply){
try {
for(key in game.getTank().components_0.array[27].supplyTypeConfigs_0.entries.$outer.map_97q5dv$_0.internalMap_uxhen5$_0.backingMap_0){
if(game.getTank().components_0.array[27].supplyTypeConfigs_0.entries.$outer.map_97q5dv$_0.internalMap_uxhen5$_0.backingMap_0[key].key_5xhq3d$_0.name$ == supply){
return key 
}


}    
} catch (error) {
    
}  
  

}

function getSupplyArrays(){
try {
window.mines = game.getSupplies("MINE")  
window.repairs = game.getSupplies("FIRST_AID")
window.DA = game.getSupplies("DOUBLE_ARMOR")
window.DD = game.getSupplies("DOUBLE_DAMAGE")
window.NITRO = game.getSupplies("NITRO")  
    
} catch (error) {
    
}
}

supps = setInterval(getSupplyArrays,500)




//HACKS

hacks.speedhack = function(){
try{
game.getTank().components_0.array[14].chassisLocker_kjqurp$_0.chassis_x8422y$_0.maxSpeedSmoother_fqgjkx$_0.currentValue_58o4vw$_0 = 15000
game.getTank().components_0.array[14].chassisLocker_kjqurp$_0.chassis_x8422y$_0.maxSpeedSmoother_fqgjkx$_0.targetValue_mmhheo$_0 = 15000
game.getAirwalk().speedCharacteristics_0.acceleration = 8000
 
}catch (error) {
 return Error
}

}

let speed = setInterval(hacks.speedhack,1500)

hacks.simpleTP = function(){
 if (KeyPressing.isKeyPressed(87 /*key: W*/) && game.getChatState()==null)
    {
       

        
            
            game.getTankPhysics().body.state.velocity.x += 1500 * Math.sin(-game.getCamera().direction);
            game.getTankPhysics().body.state.velocity.y += 1500 * Math.cos(-game.getCamera().direction);
        
    }

    if (KeyPressing.isKeyPressed(83 /*key: S*/) && game.getChatState()==null)
    {
        
        game.getTankPhysics().body.state.velocity.x -= 1500 * Math.sin(-game.getCamera().direction);
            game.getTankPhysics().body.state.velocity.y -= 1500 * Math.cos(-game.getCamera().direction);
    }

    if (KeyPressing.isKeyPressed(65 /*key: A*/) && game.getChatState()==null)
    {
        

       
           

            game.getTankPhysics().body.state.x -= 1500 * Math.sin(-(game.getCamera().direction - Math.PI / 2));
            game.getTankPhysics().body.state.y -= 1500 * Math.cos(-(game.getCamera().direction - Math.PI / 2));
        
    }

    if (KeyPressing.isKeyPressed(68 /*key: D*/) && game.getChatState()==null)
    {
        

       
            game.getTankPhysics().body.state.x += 1500 * Math.sin(-(game.getCamera().direction - Math.PI / 2));
            game.getTankPhysics().body.state.y += 1500 * Math.cos(-(game.getCamera().direction - Math.PI / 2));
        
    }





}





hacks.clicker = function(){ 
try {
game.getTank().components_0.array[27].supplyTypeConfigs_0.entries.$outer.map_97q5dv$_0.internalMap_uxhen5$_0.backingMap_0[mines]._value_0._value_0.onUserActivatedSupply() 
game.getTank().components_0.array[27].supplyTypeConfigs_0.entries.$outer.map_97q5dv$_0.internalMap_uxhen5$_0.backingMap_0[repairs]._value_0._value_0.onUserActivatedSupply() 
game.getTank().components_0.array[27].supplyTypeConfigs_0.entries.$outer.map_97q5dv$_0.internalMap_uxhen5$_0.backingMap_0[DD]._value_0._value_0.onUserActivatedSupply() 
game.getTank().components_0.array[27].supplyTypeConfigs_0.entries.$outer.map_97q5dv$_0.internalMap_uxhen5$_0.backingMap_0[DA]._value_0._value_0.onUserActivatedSupply() 
game.getTank().components_0.array[27].supplyTypeConfigs_0.entries.$outer.map_97q5dv$_0.internalMap_uxhen5$_0.backingMap_0[NITRO]._value_0._value_0.onUserActivatedSupply() 

    
} catch (error) {
    
} 


}



hacks.autoHeal = function(){
try {
if(game.getHealth()==false){
game.getTank().components_0.array[27].supplyTypeConfigs_0.entries.$outer.map_97q5dv$_0.internalMap_uxhen5$_0.backingMap_0[mines]._value_0._value_0.onUserActivatedSupply() 
game.getTank().components_0.array[27].supplyTypeConfigs_0.entries.$outer.map_97q5dv$_0.internalMap_uxhen5$_0.backingMap_0[repairs]._value_0._value_0.onUserActivatedSupply() 

  
}  
      
} catch (error) {
    
}

  
}



autoR = setInterval(hacks.autoHeal,1)


hacks.rapidUpdate = function(){
                      
try {
   game.getTank().components_0.array[37].needImmediateUpdate_0  = true  
} catch (error) {
     
 }}
let ru = setInterval(hacks.rapidUpdate,10)


hacks.TPFlagA = function(){
if(commons.getChatState()==null){
game.getTankPhysics().body_xsop3k$_0.state.position.x = vars.FlagA.x
game.getTankPhysics().body_xsop3k$_0.state.position.y = vars.FlagA.y
game.getTankPhysics().body_xsop3k$_0.state.position.z = vars.FlagA.z
}
}


hacks.TPFlagB = function(){
if(commons.getChatState()==null){  
game.getTankPhysics().body_xsop3k$_0.state.position.x = vars.FlagB.x
game.getTankPhysics().body_xsop3k$_0.state.position.y = vars.FlagB.y
game.getTankPhysics().body_xsop3k$_0.state.position.z = vars.FlagB.z
}
}

function getNames(){
try {
Table = document.getElementsByTagName("table")
cName = Table[0].children[1].children[1].children[0].className
tElems = document.getElementsByClassName(cName)  
for(let i=0;i<tElems.length;i++){
tElems[i].addEventListener("click",function(){
splitArray = (tElems[i].innerText).split("]") 
if(splitArray.length == 1){
tpName = (tElems[i].innerText).trim()
}
if(splitArray.length == 2){
tpName = (splitArray[1]).trim()
}  
  
  
  
  
})  
}
} catch (error) {
    
}
}




let gn = setInterval(getNames,100)






function tpByName(){
try {
for (key in commons.searchObject(commons.getReactRoot(),"tank").store_0.state.battleUsers.uids.map_97q5dv$_0.internalMap_uxhen5$_0.backingMap_0){
if (commons.searchObject(commons.getReactRoot(),"tank").store_0.state.battleUsers.uids.map_97q5dv$_0.internalMap_uxhen5$_0.backingMap_0[key]._value_0._value_0 == tpName){
tpUserID = commons.searchObject(commons.getReactRoot(),"tank").store_0.state.battleUsers.uids.map_97q5dv$_0.internalMap_uxhen5$_0.backingMap_0[key].key_5xhq3d$_0
}


}
    
} catch (error) {
    
}  




}

setInterval(tpByName,300)


hacks.playerTP = function(){
if(commons.getChatState()==null){ 
try {
game.getTank().components_0.array[5].tankPhysicsComponent_tczrao$_0.body_xsop3k$_0.state.position.x = game.getPlayers().getTank_s8cxhz$(tpUserID).components_0.array[5].tankPhysicsComponent_tczrao$_0.body_xsop3k$_0.state.position.x
game.getTank().components_0.array[5].tankPhysicsComponent_tczrao$_0.body_xsop3k$_0.state.position.y = game.getPlayers().getTank_s8cxhz$(tpUserID).components_0.array[5].tankPhysicsComponent_tczrao$_0.body_xsop3k$_0.state.position.y
game.getTank().components_0.array[5].tankPhysicsComponent_tczrao$_0.body_xsop3k$_0.state.position.z = game.getPlayers().getTank_s8cxhz$(tpUserID).components_0.array[5].tankPhysicsComponent_tczrao$_0.body_xsop3k$_0.state.position.z+120
    
} catch (error) {
    
}
}
}


hacks.randomTP = function(){
try {
game.getTank().components_0.array[5].tankPhysicsComponent_0.interpolatedPosition.x = commons.getRandom(game.getMapBoundary().minX,game.getMapBoundary().maxX)
game.getTank().components_0.array[5].tankPhysicsComponent_0.interpolatedPosition.y = commons.getRandom(game.getMapBoundary().minY,game.getMapBoundary().maxY)
} catch (error) {
  
}  
  
}


 
hacks.airWalk = function(){
game.getAirwalk().params_nd1j3b$_0.maxRayLength = 11111111  
game.getAirwalk().params_nd1j3b$_0.dampingCoeff = 0
game.getAirwalk().params_nd1j3b$_0.springCoeff= 0.03600008136018387
  
  
}


function unAim(){

game.getStriker().lockTarget_gcez93$ = function(){return !1-!0}
    
}

function Aim(){

game.getStriker().lockTarget_gcez93$ =function(t,e,n){return void 0===e&&(e=null),n?n(t,e):this.lockTarget_gcez93$$default(t,e)}
    
}






function ap(){for (let i = 0; i < vars.shellCache.length; i++)
                            {
                                vars.shellCache.at(i).components_0.array.at(1).maxSpeed_0 = 0;
                                vars.shellCache.at(i).components_0.array.at(1).minSpeed_0 = 0;
                            }}


function apm(){for (let i = 0; i < vars.shellCache.length; i++)
                            {
                                vars.shellCache.at(i).components_0.array.at(1).maxSpeed_0 = 35000;
                                vars.shellCache.at(i).components_0.array.at(1).minSpeed_0 = 2000;
                            }}
rocketCount = 0

hacks.oneHitKill = function(){
try {
vars.shellCache = commons.searchObject(game.getTank().components_0.array,"shellCache_0").shellCache_0.itemsInUse_123ot1$_0.array_hd7ov6$_0


game.getStriker().sendRealShotMessage_0 = async function(){
this.realShotMessage_0.barrelIndex=this.currentBarrel_0,this.entity.send_il80ix$(this.realShotMessage_0)  
Aim()
rocketCount++
ap()
if(rocketCount==8){
  
await sleep(900)
apm()
rocketCount = 0
  
}
  
  
  
  
}  

  
  
  
  
} catch (error) {
    
}  
  
  
  
  
  
  
  
}


let ohkr = setInterval(hacks.oneHitKill,100)






hacks.goldTP = function(){
if(commons.getChatState()==null){
for(let i =0;i<game.getWorld().triggers_0.triggers_0.array.length;i++){try {
if(game.getWorld().triggers_0.triggers_0.array[i].bonus_0.bonusData_cqilaj$_0.bonusLight.lightColor.color==16777215){    
game.getTank().components_0.array[5].tankPhysicsComponent_tczrao$_0.body_xsop3k$_0.state.position.x = game.getWorld().triggers_0.triggers_0.array[i].collisionBox_0.aabb.minX
game.getTank().components_0.array[5].tankPhysicsComponent_tczrao$_0.body_xsop3k$_0.state.position.y = game.getWorld().triggers_0.triggers_0.array[i].collisionBox_0.aabb.minY
game.getTank().components_0.array[5].tankPhysicsComponent_tczrao$_0.body_xsop3k$_0.state.position.z = game.getWorld().triggers_0.triggers_0.array[i].collisionBox_0.aabb.minZ+150
}     
} catch (error) {
    
}}


}

}




























//event listeners


ACpressCount = 0
document.addEventListener('keydown', function (event) { if (event.key === 'End'){
ACpressCount ++
if(ACpressCount%2==1){
window.p = setInterval(hacks.clicker,25)

   
}

if(ACpressCount%2==0){

clearInterval(window.p)
   
}


}})



FpressCount = 0
document.addEventListener('keydown', function (event) { if (event.key === 'Home'){
FpressCount ++
if(FpressCount%2==1){
window.fakeR = setInterval(hacks.randomTP,1)
document.querySelector("#unflip").style.color = "green"
   
}

if(FpressCount%2==0){

clearInterval(window.fakeR)
document.querySelector("#unflip").style.color = "red"
   
}


}})










FlpressCount = 0
document.addEventListener('keydown', function (event) { if (event.key === 'n'){
FlpressCount ++
game.getFlags()
if(FlpressCount%2==1){
hacks.TPFlagA()
   
}

if(FlpressCount%2==0){

hacks.TPFlagB()   
}


}})
AWpressCount = 0
document.addEventListener('keydown', function (event) { if (event.key === ']'){
AWpressCount ++
if(AWpressCount%2==1){
hacks.airWalk()

   
}

if(AWpressCount%2==0){
game.getAirwalk().params_nd1j3b$_0.maxRayLength = 50 
game.getAirwalk().params_nd1j3b$_0.dampingCoeff = 0
game.getAirwalk().params_nd1j3b$_0.springCoeff= 1600
  
  
   
}


}})

  
GpressCount = 0
document.addEventListener('keydown', function (event) { if (event.key === '['){
GpressCount ++
if(GpressCount%2==1){
window.gg = setInterval(hacks.goldTP,1)

   
}

if(GpressCount%2==0){

clearInterval(window.gg)
   
}


}})

  
  
  
  
  
  
  
  
  
  
  
  

document.addEventListener('keydown',   function (event) { if (event.key === 'r'){unAim()}})

document.addEventListener('keydown',  window.tpS = function (event) { if (event.key === 'v'){hacks.playerTP()}})


